using  Microsoft.DirectX;
using Microsoft.DirectX.Direct3D;
public partial class From1:Form
{
	private Device device;
	private CustomVertex.PositionColored[] vertex = newCustomVertex.PositionColored[3];
	public Form1()
	{
		InitializeComponent();
		
	}
	public void Form1_Load(object sender,EventArgs e)
	{
		PresentParameters pp = new PresentParameter();
		pp.Windowed=true;
		pp.SwapEffect = SwapEffect.Discard;
		device = new Device(0,DeviceType.Hardware,this,CreateFlags.HardwareVertexProcessing,pp);
		device.Transform.Projection = Matrix.PerpectiveFovLH(3.14f/4,device.Viewport.Width/device.Viewport.Height,1f,1000f);
		device.Tranform.View = Matrix.LookAtLH(new Vector3(0,0,20),new Vector3(),new Vector3(0,1,0));
		device.RenderStateLighting = false;
	
		Vertex[0]= new CustomVertex.PostionColored(new Vector3(),Color.Blue.ToArgb());
		Vertex[1]= new CustomVertex.PostionColored(new Vector3(),Color.Blue.ToArgb());
		Vertex[2]= new CustomVertex.PostionColored(new Vector3(),Color.Blue.ToArgb());
	}
	private void Form1_Paint(object sender,PaintEventArgs e)
	{
		device.Clear(ClearFlags.Target,Color.Black,1,0);
		device.BeginScene();
		device.VertexFormat=CustomVertex.PositionColored.Format;
		device.DrawUserPrimitives(PrimitiveType.TriangleList,Vertex.Length/3,Vertex);
		device.EndScene();
		device.Present();
	}
}